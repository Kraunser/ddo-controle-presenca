@page "/colaboradores/importar"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using DDO.Application.Services
@using DDO.Web.Models
@attribute [Authorize(Roles = "Administrator,Manager")]
@inject ColaboradorImportService ImportService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<PageTitle>Importar Colaboradores - DDO Controle de Ponto</PageTitle>

<div class="page-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="page-title">
                <span class="bi bi-file-earmark-spreadsheet me-2"></span>
                Importar Colaboradores
            </h1>
            <p class="page-subtitle">Importe colaboradores em lote através de arquivo CSV</p>
        </div>
        <div>
            <button class="btn btn-outline-primary" @onclick="DownloadExemplo">
                <span class="bi bi-download me-2"></span>
                Baixar Exemplo
            </button>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <span class="bi bi-upload me-2"></span>
                    Selecionar Arquivo CSV
                </h5>
            </div>
            <div class="card-body">
                @if (!importacaoRealizada)
                {
                    <EditForm Model="@importModel" OnValidSubmit="@ProcessarImportacao">
                        <div class="mb-4">
                            <div class="upload-area @(isDragOver ? "drag-over" : "")" 
                                 @ondragover="@HandleDragOver" 
                                 @ondragover:preventDefault="true"
                                 @ondragleave="@HandleDragLeave"
                                 @ondrop="@HandleDrop"
                                 @ondrop:preventDefault="true">
                                <InputFile OnChange="@OnFileSelected" 
                                          accept=".csv" 
                                          class="file-input" 
                                          id="csvFileInput" />
                                <label for="csvFileInput" class="upload-label">
                                    <div class="upload-icon">
                                        <span class="bi bi-file-earmark-spreadsheet"></span>
                                    </div>
                                    <div class="upload-text">
                                        <strong>Clique para selecionar</strong> ou arraste o arquivo CSV aqui
                                    </div>
                                    <div class="upload-hint">
                                        Arquivo CSV com colunas: Matricula, Nome, RFID, Area, Email, Telefone
                                    </div>
                                </label>
                            </div>
                            
                            @if (arquivoSelecionado != null)
                            {
                                <div class="selected-file mt-3">
                                    <div class="d-flex align-items-center">
                                        <span class="bi bi-file-earmark-spreadsheet text-success me-2"></span>
                                        <div class="flex-grow-1">
                                            <div class="file-name">@arquivoSelecionado.Name</div>
                                            <div class="file-size text-muted">@FormatFileSize(arquivoSelecionado.Size)</div>
                                        </div>
                                        <button type="button" class="btn btn-sm btn-outline-danger" @onclick="RemoverArquivo">
                                            <span class="bi bi-x"></span>
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary" disabled="@(isProcessing || arquivoSelecionado == null)">
                                @if (isProcessing)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                    <span>Processando...</span>
                                }
                                else
                                {
                                    <span class="bi bi-upload me-2"></span>
                                    <span>Importar Colaboradores</span>
                                }
                            </button>
                            
                            <button type="button" class="btn btn-secondary" @onclick="LimparFormulario">
                                <span class="bi bi-arrow-clockwise me-2"></span>
                                Limpar
                            </button>
                        </div>
                    </EditForm>
                }
                else
                {
                    <!-- Resultado da Importação -->
                    <div class="import-result">
                        @if (resultadoImportacao!.Sucesso)
                        {
                            <div class="alert alert-success">
                                <h5 class="alert-heading">
                                    <span class="bi bi-check-circle me-2"></span>
                                    Importação Concluída!
                                </h5>
                                <p class="mb-0">@resultadoImportacao.Mensagem</p>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <h5 class="alert-heading">
                                    <span class="bi bi-exclamation-triangle me-2"></span>
                                    Erro na Importação
                                </h5>
                                <p class="mb-0">@resultadoImportacao.Mensagem</p>
                            </div>
                        }

                        <!-- Estatísticas -->
                        <div class="row g-3 mb-4">
                            <div class="col-md-4">
                                <div class="stat-box stat-total">
                                    <div class="stat-number">@resultadoImportacao.TotalProcessados</div>
                                    <div class="stat-label">Total Processados</div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="stat-box stat-success">
                                    <div class="stat-number">@resultadoImportacao.TotalSucesso</div>
                                    <div class="stat-label">Importados</div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="stat-box stat-error">
                                    <div class="stat-number">@resultadoImportacao.TotalErros</div>
                                    <div class="stat-label">Erros</div>
                                </div>
                            </div>
                        </div>

                        <!-- Lista de Erros -->
                        @if (resultadoImportacao.Erros.Any())
                        {
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">
                                        <span class="bi bi-exclamation-circle me-2"></span>
                                        Detalhes dos Erros (@resultadoImportacao.Erros.Count)
                                    </h6>
                                </div>
                                <div class="card-body">
                                    <div class="error-list">
                                        @foreach (var erro in resultadoImportacao.Erros)
                                        {
                                            <div class="error-item">
                                                <span class="bi bi-x-circle text-danger me-2"></span>
                                                @erro
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Ações -->
                        <div class="d-flex gap-2 mt-4">
                            <button class="btn btn-primary" @onclick="NovaImportacao">
                                <span class="bi bi-plus me-2"></span>
                                Nova Importação
                            </button>
                            <a href="/colaboradores" class="btn btn-success">
                                <span class="bi bi-people me-2"></span>
                                Ver Colaboradores
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <span class="bi bi-info-circle me-2"></span>
                    Instruções
                </h5>
            </div>
            <div class="card-body">
                <div class="instruction-step">
                    <div class="step-number">1</div>
                    <div class="step-content">
                        <strong>Baixe o arquivo de exemplo</strong>
                        <p class="text-muted">Use o botão "Baixar Exemplo" para obter um modelo do arquivo CSV.</p>
                    </div>
                </div>
                
                <div class="instruction-step">
                    <div class="step-number">2</div>
                    <div class="step-content">
                        <strong>Prepare seus dados</strong>
                        <p class="text-muted">Preencha o arquivo com os dados dos colaboradores seguindo o formato do exemplo.</p>
                    </div>
                </div>
                
                <div class="instruction-step">
                    <div class="step-number">3</div>
                    <div class="step-content">
                        <strong>Faça o upload</strong>
                        <p class="text-muted">Selecione o arquivo CSV preenchido e clique em "Importar Colaboradores".</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <span class="bi bi-list-check me-2"></span>
                    Formato do Arquivo
                </h5>
            </div>
            <div class="card-body">
                <div class="format-info">
                    <strong>Colunas obrigatórias:</strong>
                    <ul class="list-unstyled mt-2">
                        <li><span class="bi bi-check text-success me-2"></span>Matricula</li>
                        <li><span class="bi bi-check text-success me-2"></span>Nome</li>
                        <li><span class="bi bi-check text-success me-2"></span>RFID</li>
                        <li><span class="bi bi-check text-success me-2"></span>Area</li>
                    </ul>
                    
                    <strong>Colunas opcionais:</strong>
                    <ul class="list-unstyled mt-2">
                        <li><span class="bi bi-dash text-muted me-2"></span>Email</li>
                        <li><span class="bi bi-dash text-muted me-2"></span>Telefone</li>
                    </ul>
                </div>
                
                <div class="mt-3">
                    <strong>Observações:</strong>
                    <ul class="text-muted small">
                        <li>Use vírgula (,) ou ponto e vírgula (;) como separador</li>
                        <li>A área deve existir no sistema</li>
                        <li>Matrícula e RFID devem ser únicos</li>
                        <li>Tamanho máximo: 5MB</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ImportModel importModel = new();
    private IBrowserFile? arquivoSelecionado;
    private bool isProcessing = false;
    private bool isDragOver = false;
    private bool importacaoRealizada = false;
    private ResultadoImportacao? resultadoImportacao;

    private async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        arquivoSelecionado = e.File;
        StateHasChanged();
    }

    private void HandleDragOver()
    {
        isDragOver = true;
    }

    private void HandleDragLeave()
    {
        isDragOver = false;
    }

    private async Task HandleDrop(DragEventArgs e)
    {
        isDragOver = false;
        // TODO: Implementar lógica de drag & drop se necessário
    }

    private async Task ProcessarImportacao()
    {
        if (arquivoSelecionado == null) return;

        isProcessing = true;
        StateHasChanged();

        try
        {
            var formFile = new BrowserFileAsFormFile(arquivoSelecionado);
            resultadoImportacao = await ImportService.ImportarColaboradoresAsync(formFile);
            importacaoRealizada = true;
        }
        catch (Exception)
        {
            await JSRuntime.InvokeVoidAsync("showAlert", "error", "Erro!", "Ocorreu um erro inesperado durante a importação.");
        }
        finally
        {
            isProcessing = false;
            StateHasChanged();
        }
    }

    private void RemoverArquivo()
    {
        arquivoSelecionado = null;
        StateHasChanged();
    }

    private void LimparFormulario()
    {
        importModel = new ImportModel();
        arquivoSelecionado = null;
        StateHasChanged();
    }

    private void NovaImportacao()
    {
        importacaoRealizada = false;
        resultadoImportacao = null;
        LimparFormulario();
    }

    private async Task DownloadExemplo()
    {
        try
        {
            var arquivoExemplo = ImportService.GerarArquivoExemplo();
            var base64 = Convert.ToBase64String(arquivoExemplo);
            await JSRuntime.InvokeVoidAsync("downloadFileFromBase64", base64, "exemplo-colaboradores.csv", "text/csv");
        }
        catch (Exception)
        {
            await JSRuntime.InvokeVoidAsync("showAlert", "error", "Erro!", "Erro ao gerar arquivo de exemplo.");
        }
    }

    private string FormatFileSize(long bytes)
    {
        string[] sizes = { "B", "KB", "MB", "GB" };
        double len = bytes;
        int order = 0;
        while (len >= 1024 && order < sizes.Length - 1)
        {
            order++;
            len = len / 1024;
        }
        return $"{len:0.##} {sizes[order]}";
    }

    public class ImportModel
    {
        // Modelo vazio para o formulário
    }
}

<style>
    .page-header {
        margin-bottom: 2rem;
    }

    .page-title {
        color: #1e40af;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: #6b7280;
        margin-bottom: 0;
    }

    .upload-area {
        border: 2px dashed #d1d5db;
        border-radius: 0.75rem;
        padding: 2rem;
        text-align: center;
        transition: all 0.3s ease;
        background-color: #f9fafb;
        position: relative;
    }

    .upload-area:hover,
    .upload-area.drag-over {
        border-color: #10b981;
        background-color: #ecfdf5;
    }

    .file-input {
        position: absolute;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
    }

    .upload-label {
        cursor: pointer;
        margin: 0;
    }

    .upload-icon {
        font-size: 3rem;
        color: #10b981;
        margin-bottom: 1rem;
    }

    .upload-text {
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
    }

    .upload-hint {
        color: #6b7280;
        font-size: 0.875rem;
    }

    .selected-file {
        background-color: #ecfdf5;
        border: 1px solid #a7f3d0;
        border-radius: 0.5rem;
        padding: 1rem;
    }

    .file-name {
        font-weight: 500;
        color: #059669;
    }

    .file-size {
        font-size: 0.875rem;
    }

    .instruction-step {
        display: flex;
        align-items: flex-start;
        margin-bottom: 1.5rem;
    }

    .instruction-step:last-child {
        margin-bottom: 0;
    }

    .step-number {
        width: 32px;
        height: 32px;
        background-color: #3b82f6;
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        margin-right: 1rem;
        flex-shrink: 0;
    }

    .step-content {
        flex-grow: 1;
    }

    .step-content p {
        margin-bottom: 0;
        font-size: 0.875rem;
    }

    .stat-box {
        text-align: center;
        padding: 1rem;
        border-radius: 0.5rem;
        border: 1px solid #e5e7eb;
    }

    .stat-total {
        background-color: #f3f4f6;
    }

    .stat-success {
        background-color: #ecfdf5;
        border-color: #a7f3d0;
    }

    .stat-error {
        background-color: #fef2f2;
        border-color: #fecaca;
    }

    .stat-number {
        font-size: 2rem;
        font-weight: bold;
        margin-bottom: 0.25rem;
    }

    .stat-success .stat-number {
        color: #059669;
    }

    .stat-error .stat-number {
        color: #dc2626;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #6b7280;
    }

    .error-list {
        max-height: 300px;
        overflow-y: auto;
    }

    .error-item {
        padding: 0.5rem 0;
        border-bottom: 1px solid #f3f4f6;
        font-size: 0.875rem;
    }

    .error-item:last-child {
        border-bottom: none;
    }

    .format-info ul {
        margin-bottom: 0;
    }

    .format-info li {
        padding: 0.25rem 0;
    }
</style>
