@page "/"
@using Microsoft.AspNetCore.Authorization
@using DDO.Application.Services
@attribute [Authorize]
@inject DashboardService DashboardService
@inject IJSRuntime JSRuntime

<PageTitle>Dashboard - DDO Controle de Ponto</PageTitle>

<div class="dashboard-header">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="dashboard-title">
                <span class="bi bi-speedometer2 me-2"></span>
                Dashboard DDO
            </h1>
            <p class="dashboard-subtitle">Controle de Presença - Visão Geral</p>
        </div>
        <div class="d-flex gap-2">
            <input type="date" class="form-control" @bind:after="AtualizarDados" @bind="dataInicio" style="width: auto;">
            <input type="date" class="form-control" @bind:after="AtualizarDados" @bind="dataFim" style="width: auto;">
            <button class="btn btn-primary" @onclick="AtualizarDados">
                <span class="bi bi-arrow-clockwise me-2"></span>
                Atualizar
            </button>
        </div>
    </div>
</div>

@if (isLoading)
{
    <div class="text-center p-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Carregando...</span>
        </div>
        <p class="mt-3 text-muted">Carregando dados do dashboard...</p>
    </div>
}
else
{
    <!-- Cards de Estatísticas Principais -->
    <div class="row g-3 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="stat-card stat-primary">
                <div class="stat-icon">
                    <span class="bi bi-calendar-check"></span>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@dashboardData.EstatisticasGerais.TotalPresencas</div>
                    <div class="stat-label">Total de Presenças</div>
                    <div class="stat-period">@dashboardData.PeriodoInicio.ToString("dd/MM") - @dashboardData.PeriodoFim.ToString("dd/MM")</div>
                </div>
                <div class="stat-trend">
                    @if (dashboardData.ComparativoPeriodos.VariacaoPresencas > 0)
                    {
                        <span class="trend-up">
                            <span class="bi bi-arrow-up"></span>
                            @dashboardData.ComparativoPeriodos.VariacaoPresencas%
                        </span>
                    }
                    else if (dashboardData.ComparativoPeriodos.VariacaoPresencas < 0)
                    {
                        <span class="trend-down">
                            <span class="bi bi-arrow-down"></span>
                            @Math.Abs(dashboardData.ComparativoPeriodos.VariacaoPresencas)%
                        </span>
                    }
                    else
                    {
                        <span class="trend-neutral">
                            <span class="bi bi-dash"></span>
                            0%
                        </span>
                    }
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="stat-card stat-success">
                <div class="stat-icon">
                    <span class="bi bi-calendar-day"></span>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@dashboardData.EstatisticasGerais.PresencasHoje</div>
                    <div class="stat-label">Presenças Hoje</div>
                    <div class="stat-period">@DateTime.Now.ToString("dd/MM/yyyy")</div>
                </div>
                <div class="stat-trend">
                    <span class="trend-info">
                        <span class="bi bi-clock"></span>
                        Tempo real
                    </span>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="stat-card stat-warning">
                <div class="stat-icon">
                    <span class="bi bi-people"></span>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@dashboardData.EstatisticasGerais.ColaboradoresComPresenca</div>
                    <div class="stat-label">Colaboradores Ativos</div>
                    <div class="stat-period">de @dashboardData.EstatisticasGerais.TotalColaboradores total</div>
                </div>
                <div class="stat-trend">
                    <span class="trend-info">
                        @dashboardData.EstatisticasGerais.TaxaPresenca% taxa
                    </span>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="stat-card stat-info">
                <div class="stat-icon">
                    <span class="bi bi-graph-up"></span>
                </div>
                <div class="stat-content">
                    <div class="stat-number">@dashboardData.EstatisticasGerais.MediaPresencasDiarias</div>
                    <div class="stat-label">Média Diária</div>
                    <div class="stat-period">presenças por dia</div>
                </div>
                <div class="stat-trend">
                    <span class="trend-info">
                        <span class="bi bi-calculator"></span>
                        Média
                    </span>
                </div>
            </div>
        </div>
    </div>

    <!-- Ações Rápidas -->
    <div class="row g-4 mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <span class="bi bi-lightning-fill me-2"></span>
                        Ações Rápidas
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <a href="/presenca/monitor" class="btn btn-primary btn-lg w-100">
                                <span class="bi bi-broadcast me-2"></span>
                                Monitor Presença
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="/arquivos/upload" class="btn btn-success btn-lg w-100">
                                <span class="bi bi-cloud-upload me-2"></span>
                                Upload PDF
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="/colaboradores/importar" class="btn btn-info btn-lg w-100">
                                <span class="bi bi-file-earmark-spreadsheet me-2"></span>
                                Importar CSV
                            </a>
                        </div>
                        <div class="col-md-3">
                            <a href="/colaboradores" class="btn btn-warning btn-lg w-100">
                                <span class="bi bi-people me-2"></span>
                                Colaboradores
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Gráficos Principais -->
    <div class="row g-4 mb-4">
        <!-- Gráfico de Tendência -->
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <span class="bi bi-graph-up me-2"></span>
                        Tendência de Presenças
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="tendenciaChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>

        <!-- Gráfico de Pizza por Área -->
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <span class="bi bi-pie-chart me-2"></span>
                        Distribuição por Área
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="areaChart" width="300" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabelas e Rankings -->
    <div class="row g-4 mb-4">
        <!-- Ranking de Colaboradores -->
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <span class="bi bi-trophy me-2"></span>
                        Top Colaboradores
                    </h5>
                </div>
                <div class="card-body">
                    @if (dashboardData.RankingColaboradores.Any())
                    {
                        <div class="ranking-list">
                            @foreach (var (colaborador, index) in dashboardData.RankingColaboradores.Take(5).Select((c, i) => (c, i)))
                            {
                                <div class="ranking-item">
                                    <div class="ranking-position">
                                        @if (index == 0)
                                        {
                                            <span class="bi bi-trophy-fill text-warning"></span>
                                        }
                                        else if (index == 1)
                                        {
                                            <span class="bi bi-award-fill text-secondary"></span>
                                        }
                                        else if (index == 2)
                                        {
                                            <span class="bi bi-award text-warning"></span>
                                        }
                                        else
                                        {
                                            <span class="position-number">@(index + 1)</span>
                                        }
                                    </div>
                                    <div class="ranking-info">
                                        <div class="ranking-name">@colaborador.NomeColaborador</div>
                                        <div class="ranking-area">@colaborador.Area</div>
                                    </div>
                                    <div class="ranking-stats">
                                        <div class="ranking-presencas">@colaborador.TotalPresencas</div>
                                        <div class="ranking-dias">@colaborador.DiasPresentes dias</div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted p-3">
                            <span class="bi bi-inbox display-4 d-block mb-2"></span>
                            <p>Nenhum dado disponível para o período selecionado</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Estatísticas por Área -->
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <span class="bi bi-building me-2"></span>
                        Presenças por Área
                    </h5>
                </div>
                <div class="card-body">
                    @if (dashboardData.PresencaPorArea.Any())
                    {
                        <div class="area-stats">
                            @foreach (var area in dashboardData.PresencaPorArea.Take(5))
                            {
                                <div class="area-item">
                                    <div class="area-info">
                                        <div class="area-name">@area.NomeArea</div>
                                        <div class="area-details">
                                            @area.ColaboradoresUnicos colaboradores • Média: @area.MediaPresencasDiarias/dia
                                        </div>
                                    </div>
                                    <div class="area-count">
                                        <span class="badge bg-primary">@area.TotalPresencas</span>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted p-3">
                            <span class="bi bi-building display-4 d-block mb-2"></span>
                            <p>Nenhum dado disponível para o período selecionado</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Gráfico de Distribuição Horária -->
    <div class="row g-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <span class="bi bi-clock me-2"></span>
                        Distribuição Horária das Presenças
                    </h5>
                </div>
                <div class="card-body">
                    <canvas id="horariaChart" width="800" height="300"></canvas>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private DashboardData dashboardData = new();
    private bool isLoading = true;
    private DateTime dataInicio = DateTime.Now.AddDays(-30);
    private DateTime dataFim = DateTime.Now;

    protected override async Task OnInitializedAsync()
    {
        await CarregarDados();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isLoading)
        {
            await RenderizarGraficos();
        }
    }

    private async Task CarregarDados()
    {
        isLoading = true;
        StateHasChanged();

        try
        {
            var inicio = DateOnly.FromDateTime(dataInicio);
            var fim = DateOnly.FromDateTime(dataFim);
            
            dashboardData = await DashboardService.ObterDadosDashboardAsync(inicio, fim);
        }
        catch (Exception)
        {
            await JSRuntime.InvokeVoidAsync("showAlert", "error", "Erro!", "Erro ao carregar dados do dashboard.");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task AtualizarDados()
    {
        await CarregarDados();
        if (!isLoading)
        {
            await RenderizarGraficos();
        }
    }

    private async Task RenderizarGraficos()
    {
        try
        {
            // Gráfico de Tendência
            var tendenciaLabels = dashboardData.TendenciaPresenca.Select(t => t.Periodo).ToArray();
            var tendenciaData = dashboardData.TendenciaPresenca.Select(t => t.TotalPresencas).ToArray();
            
            await JSRuntime.InvokeVoidAsync("renderLineChart", "tendenciaChart", tendenciaLabels, tendenciaData, "Presenças");

            // Gráfico de Pizza por Área
            var areaLabels = dashboardData.PresencaPorArea.Select(a => a.NomeArea).ToArray();
            var areaData = dashboardData.PresencaPorArea.Select(a => a.TotalPresencas).ToArray();
            
            await JSRuntime.InvokeVoidAsync("renderPieChart", "areaChart", areaLabels, areaData);

            // Gráfico de Distribuição Horária
            var horariaLabels = dashboardData.DistribuicaoHoraria.Select(h => $"{h.Hora:00}h").ToArray();
            var horariaData = dashboardData.DistribuicaoHoraria.Select(h => h.TotalPresencas).ToArray();
            
            await JSRuntime.InvokeVoidAsync("renderBarChart", "horariaChart", horariaLabels, horariaData, "Presenças por Hora");
        }
        catch (Exception)
        {
            // Log do erro ou exibir mensagem para o usuário
            Console.WriteLine($"Erro ao renderizar gráficos: {ex.Message}");
        }
    }
}