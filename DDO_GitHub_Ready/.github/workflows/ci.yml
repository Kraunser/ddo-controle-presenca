name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    # Temporariamente desabilitado - adicionar projeto de testes futuramente
    # - name: Run tests
    #   run: dotnet test --no-build --configuration Release --verbosity normal
      
    - name: Publish application
      run: dotnet publish DDO.Web/DDO.Web.csproj --no-build --configuration Release --output ./publish
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: published-app
        path: ./publish
        
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Run code analysis
      run: dotnet build --configuration Release --verbosity normal
      
    # Temporariamente desabilitado - configurar formatação futuramente
    # - name: Check formatting
    #   run: dotnet format --verify-no-changes --verbosity diagnostic
      
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run basic security check
      run: |
        echo "Running basic security checks..."
        # Verificar se há arquivos sensíveis
        if find . -name "*.key" -o -name "*.pem" -o -name "*.p12" -o -name "*.pfx" | grep -q .; then
          echo "Warning: Found potential sensitive files"
          exit 1
        fi
        # Verificar se há connection strings hardcoded
        if grep -r "Password=" --include="*.cs" --include="*.json" . | grep -v "example" | grep -q .; then
          echo "Warning: Found potential hardcoded passwords"
          exit 1
        fi
        echo "Basic security check passed"
